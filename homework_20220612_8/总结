1、创建项目基本结构
    apiobject模式，将每一个接口都封装成一个类对象来对待，根据测试用例的调用流程，来调用相关的api，形成测试场景
        api:这是一个package，用来各个接口的类封装，按照你的业务可以将其分为多个package
        comment:这是一个package，用来封装底层公共方法，比如requests库封装、文件操作封装、加解密封装、redis封装、数据库封装、随机数据封装、日志封装
        testcases:这是一个package,用来编写封装我们的测试用例
        config:这是一个普通目录,用来存放基本的配置信息,比如数据库、redis、各个服务域名、各个环境的配置
        data:这是一个普通目录,用来存放测试用例数据
        logs:这是一个普通目录，用来存放收集到的日志文件
        report：这是一个普通目录，用来存放测试结果数据以及生成的测试报告
        conftest.py: 一个Python文件，用来pytest自带的一些钩子函数以及自定义的fixture
        pytest.ini: pytest的基本配置文件
        run.py: 框架整体的统一执行入口
    如何区分我要创建的应该是package还是普通目录，如果你要存放的Python代码文件，那就用package，如果你要存放的是非代码文件，就用普通目录

2、封装核心类以及方法
    1.接口方法依赖于requests库，我们要将各个接口都封装成单独的类，那么他们都具备接口的一些基本信息，所以我们向上抽取一个父类
    2.封装添加购物车和立即购买接口，我们发现所有需要依赖Token的接口，都在初始化函数里传入了Token参数，那么是否可以优化一下，让需要
    Token的接口不需要每次都自己去传递，而在某一个地方自动赋值，既然买家每个接口的类定义中headers都是一样的，那么可否针对买家的接口在封装一个
    父类，在父类声明买家接口的通用性信息定义或者封装
    因此我们可以针对每个服务再次封装各个服务对应的父类

3、封装各个服务的父类
    在api目录下创建一个base_api.py的文件，修改之前封装的接口信息

4、测试用例编写
    测试用例都是放在testcases下的，大部分的接口都是依赖于登录所产生的Token，那么Token我们需要如何处理才能统一性的做到Token获取并赋值

5、测试数据管理
    为了将数据和代码进行管理，我们可以将测试数据单独存储和管理，至于说你是存csv、Excel、yaml、db，这些方式都可以
    1.Excel的操作需要依赖第三方库，当然第三方库也有很多，我们使用pandas
      pip install openpyxl     pip install pandas

6、加解密封装处理
    MD5加密：在comment目录下创建encry_decy.py文件，写上md5加密处理，MD5是一个不可逆的加密处理
    aes加解密：对称加密算法，对称指的是意思就是加密和解密用到的私钥是一样的，在做接口测试时，需要找开发要私钥
    rsa加解密：非对称解密算法，非对称指的是加密和解密用到的钥匙不一样，对于rsa来说他有公钥和私钥，如果用公钥加密则用私钥解密，如果用私钥加密则用公钥解密


















