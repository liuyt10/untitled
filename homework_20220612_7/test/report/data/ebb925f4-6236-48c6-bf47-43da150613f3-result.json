{"name": "test_buy_now_params[num超过库存-17418-99999999-500-452-商品库存已不足1，不能购买。]", "status": "failed", "statusDetails": {"message": "pytest_assume.plugin.FailedAssumption: \n2 Failed Assumptions:\n\ntest_buy.py:27: AssumptionFailure\n>>\tpytest.assume(resp.json()['code'] == expect_code,\nAssertionError: 实际值是************：451,期待值是**********：452\nassert False\n\ntest_buy.py:29: AssumptionFailure\n>>\tpytest.assume(resp.json()['message'] == expect_message,\nAssertionError: 实际值是**********：商品库存已不足，不能购买。,期待值是*********：商品库存已不足1，不能购买。\nassert False", "trace": "tp = <class 'pytest_assume.plugin.FailedAssumption'>, value = None, tb = None\n\n    def reraise(tp, value, tb=None):\n        try:\n            if value is None:\n                value = tp()\n            if value.__traceback__ is not tb:\n>               raise value.with_traceback(tb)\nE               pytest_assume.plugin.FailedAssumption: \nE               2 Failed Assumptions:\nE               \nE               test_buy.py:27: AssumptionFailure\nE               >>\tpytest.assume(resp.json()['code'] == expect_code,\nE               AssertionError: 实际值是************：451,期待值是**********：452\nE               assert False\nE               \nE               test_buy.py:29: AssumptionFailure\nE               >>\tpytest.assume(resp.json()['message'] == expect_message,\nE               AssertionError: 实际值是**********：商品库存已不足，不能购买。,期待值是*********：商品库存已不足1，不能购买。\nE               assert False\n\n..\\..\\venv\\pythonfile\\lib\\site-packages\\six.py:718: FailedAssumption"}, "parameters": [{"name": "casename", "value": "'num超过库存'"}, {"name": "sku_id", "value": "17418"}, {"name": "num", "value": "99999999"}, {"name": "expect_statuscode", "value": "500"}, {"name": "expect_code", "value": "'452'"}, {"name": "expect_message", "value": "'商品库存已不足1，不能购买。'"}], "start": 1659201320157, "stop": 1659201320309, "uuid": "7ff36e4d-2b76-4a15-b344-a19834a64b13", "historyId": "4ae5327930209abd27f36a1bd44d752f", "testCaseId": "5dc7fa1322b06f175d44f4e16d6d2c94", "fullName": "test_buy#test_buy_now_params", "labels": [{"name": "suite", "value": "test_buy"}, {"name": "host", "value": "DESKTOP-BQAO4M4"}, {"name": "thread", "value": "32444-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_buy"}]}